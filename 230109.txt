html_1
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Momentum App</title>
</head>
<body>
    <h1 class="hello!!!!" id="title">Grab me!</h1> 
    <script src="app.js"></script>
</body>
</html>


app.js_1
// 핵심인 object 를 볼 것임 
const title = document.getElementById("title"); // 저 함수로 가져온것임 
// document는 함수처럼 쓸 수있는것들이 많이 존재함

title.innerText = "Got you!";
console.dir(title);

console.log(title.id);
console.log(title.className);
// 우린 document함수를 통해 object를 배운거임
// 첫번째는, document에서 항목들을 가지고 오는 것이구
// 두번째는, 이 document 항목들을 변경하는 거야 
// javascript에서 HTML을 가져올 수 있는 다른 방법들을 배워 볼 것임 



app.js:5 Uncaught TypeError: Cannot set properties of null (setting 'innerText')
에러는 null의 innerText를 접근하려고 하는것때문임
title은 null인데 우린 null의 innerText를 접근하려고 하는것

// ########################## Serach for element Start  #################################
//const hellos = document.getElementsByClassName("hello");
//console.log(hellos);

const title = document.querySelector(".hello h1"); //querySelecor는 element를 CSS방식으로 검색할 수 있음
// hello란 class 내부에 있는 h1을 가지고 올 수 있음을 의미
// querySelecrot는 첫번째 element만 가져옴 
// querySelecrotAll는 모든 element만 가져옴 
title.innerText="hello";
// console.log(title);

// const test = document.querySelector(".hello h1:first-child");
// console.log(test);
// ########################## Serach for element End #################################


- 지금 js파일이 있기 때문에 js를 통해 html의 내용을 가져올 수 있는 거임
- document가 html이 js파일을 load하기 때문에 존재 → 그 다음에 browser가 우리가 document에 접근할 수 있게 해줌
- element의 내부를 보고 싶으면 console.dir()
기본적으로 object로 표시한 element를 보여줌(전부 js object임)
그 element 중 앞에 on이 붙은 것들은 event임
- event: 어떤 행위를 하는 것
모든 event는 js가 listen할 수 있음
- eventListener : event를 listen함 → js에게 무슨 event를 listen하고 싶은 지 알려줘야 함
- title.addEventListener("click") : 누군가가 title을 click하는 것을 listen할 거임 → 무언가를 해줘야함

const title = document.querySelector("div.hello:first-child h1");

function handleTitleClick(){
title.style.color = "blue";
}
title.addEventListener("click",handleTitleClick);
//click하면 handleTitleClick이라는 function이 동작하길 원함
//그래서 handle~ 함수에 () 를 안넣은 것임
//즉, js가 대신 실행시켜주길 바라는 것임!

- function이 js에게 넘겨주고 유저가 title을 click할 경우에 js가 실행버튼을 대신 눌러주길 바라는 것임( 직접 handleTitleClick(); 이렇게 하는 것이 아니라)
- 함수에서 () 이 두 괄호를 추가함으로써 실행버튼을 누를 수 있는 거임
///////////////////////////////// EVENT START //////////////////////////////////////////

const loginForm = document.querySelector("#login-form");
const loginInput = document.querySelector("#login-form input");

function onLoginSubmit(event) {
    event.preventDefault(); //preventDefault > 어떤 event의 기본행동이 발생하지 않도록 함
                                    // 여기선 브라우저가 새로고침을 하는 걸 막는데 쓰여졌음 
    console.log(loginInput.value);
}
//하나의 argument를 받고 JS에 넘겨주고 있음

loginForm.addEventListener("submit", onLoginSubmit);
// 누군가 form을 submit하면 실행함


/*
function onLoginSubmit(event){
event.preventDefault(); // 브라우저가 기본 동작을 실행하지 못하게 막기 // event object는 preventDefault함수를 기본적으로 갖고 있음
console.log(event);
}

loginForm.addEventListener("submit", onLoginSubmit); // submit 이벤트가 발생한다면, onLoginSubmit함수를 실행시킨다는 의미 // JS는 onLoginSubmit함수 호출시 인자를 담아서 호출함. 해당 인자는 event object를 담은 정보들

★ 중요 ★
form을 submit하면 브라우저는 기본적으로 페이지를 새로고침 하도록 되어있다. << 우리가 원하는 것이 아님!
preventDefault() 함수를 추가함으로써 브라우저의 기본 동작을 막을 수 있다!!

이 preventDefault 함수는 EventListener 함수의 '첫 번째 argument' 안에 있는 함수이다. 첫 arument는 지금 막 벌어진 event들에 대한 정보를 갖고 있다.
JS는(기본적으로)argument를 담아서 함수를 호출하는데, 이 argument가 기본 정보들을 제공하고 있다. ex) 누가 submit주체인지, 몇 시에 submit을 했는지 등등 콘솔에 출력해보면 알 수 있음
*/


/////////////////////////////////// HTML

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Momentum App</title>
</head>
<body>
    <form id ="login-form">
    <div id="login-form">
     <input required maxlength="15" type="text" placeholder="What is your name?" />
     <input type="submit" value="Log In" />
    </form>
    </div>
    <script src="app.js"></script>
</body>
</html>


///////////////////////////////// EVENT 1 END //////////////////////////////////////////


///////////////////////////////// EVENT 2 START //////////////////////////////////////////

/////////////////// HTML
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <title>Momentum App</title>
</head>
<body>
    <form id ="login-form">
     <input required maxlength="15" type="text" placeholder="What is your name?" />
     <input type="submit" value="Log In" />
    </form>
    <a href="https://nomadcoders.co">Go to courses</a>
    <script src="app.js"></script>
</body>
</html>
/////////////////// HTML END


// Go to courses 는 누르자 마자 넘어가는 기본 동작을 가지고 있음 우리는 이걸 막을거임

const loginForm = document.querySelector("#login-form");
const loginInput = document.querySelector("#login-form input");

const link = document.querySelector("a");

function onLoginSubmit(event) {
    event.preventDefault();
    console.log(loginInput.value);
}

function handleLinkClick(event) {
    event.preventDefault();
    //console.dir(event);
    //alert("click.");  //alert 창을 띄워서 다음 동작으로 진행하지 않게끔 했음
}

loginForm.addEventListener("submit", onLoginSubmit);
link.addEventListener("click", handleLinkClick);


///////////////////////////////// EVENT 2 END //////////////////////////////////////////


const loginForm = document.querySelector("#login-form");
const loginInput = document.querySelector("#login-form input");
const greeting = document.querySelector("#greeting");

const link = document.querySelector("a");

const HIDDEN_CLASSNAME = "hidden";

function onLoginSubmit(event) {
    event.preventDefault();
    loginForm.classList.add(HIDDEN_CLASSNAME); 
    const username = loginInput.value;
    //greeting.innerText = "Hello " + username;
    greeting.innerText = `Hello ${username}`;  //이게 위에꺼랑 똑같은데 이게 더 편함, string d이랑 변수랑 합쳐줘
    greeting.classList.remove(HIDDEN_CLASSNAME);
}

loginForm.addEventListener("submit", onLoginSubmit);



